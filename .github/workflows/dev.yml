name: Genius Stock Service Deploy
on:
  push:
    branches: [ "dev" ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/geniusstockservice
#  TARGET_SSH_HOST: ${{ secrets.TARGET_SSH_HOST }}
#  TARGET_SSH_USER: ${{ secrets.TARGET_SSH_USER }}
#  TARGET_SSH_PASSWORD: ${{ secrets.TARGET_SSH_PASSWORD }}
#  TARGET_SSH_PORT: ${{ secrets.TARGET_SSH_PORT }}

jobs:
  build-and-push-image:
    name: Build Docker image and push to repositories
    runs-on: ubuntu-latest
    environment: dev
    permissions:
      contents: read
      packages: write
      attestations: write
    outputs:
      output_image_tags: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,prefix={{branch}}-
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
#  deploy-to-xiangcao:
#    name: deploy to xiangcao server
#    runs-on: ubuntu-latest
#    environment: main
#    needs: build-and-push-image
#    permissions:
#      contents: read
#      packages: write
#      attestations: write
#    steps:
#      - name: deploying
#        uses: appleboy/ssh-action@v0.1.8
#        with:
#          host: ${{ env.TARGET_SSH_HOST }}
#          username: ${{ env.TARGET_SSH_USER }}
#          password: ${{ env.TARGET_SSH_PASSWORD }}
#          port: ${{ env.TARGET_SSH_PORT }}
#          script: |
#            docker container stop tradetrackermain
#            docker container rm tradetrackermain
#            docker container run -d --name tradetrackermain -p ${{ env.TARGET_SERVICE_PORT }}:13180 -v ~/genius/FinTracker/log:/app/app/log --link ${{ env.POSTGRES_CONTAINER_NAME }}:${{ env.POSTGRES_CONTAINER_NAME }} --net=${{ env.POSTGRES_CONTAINER_NETWORK }} -e POSTGRES_HOST=${{ env.POSTGRES_CONTAINER_NAME }} -e POSTGRES_PORT=${{ env.POSTGRES_PORT }} -e POSTGRES_USER=${{ env.POSTGRES_USER }} -e POSTGRES_PASSWORD=${{ env.POSTGRES_PASSWORD }} -e POSTGRES_DB=${{ env.POSTGRES_DB }} ${{needs.build-and-push-image.outputs.output_image_tags}}
#
#
